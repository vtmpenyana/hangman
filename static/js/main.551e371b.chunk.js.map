{"version":3,"sources":["TextBox.js","ErrorBoundry.js","App.js","index.js"],"names":["TextBox","onSearchChange","id","onChange","className","type","placeholder","ErrorBoundry","componentDidCatch","err","info","setState","hasError","state","this","props","children","Component","App","onSubmitClick","textValue","correctWord","document","querySelector","value","randomNumber","Math","floor","random","words","length","wordToShow","listOfWords","splice","console","log","indexOf","incompleteWord","replace","currentScore","playerLives","alert","event","target","word","resetInput","fetch","then","response","json","firstWord","wordSize","randomLetterIndex","data-icon","viewBox","d","onClick","href","url","ReactDOM","render","StrictMode","getElementById"],"mappings":"iQAgBeA,EAdC,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eACd,OACI,6BACI,2BACAC,GAAG,aACHC,SAAUF,EACVG,UAAU,qCACVC,KAAK,OACLC,YAAY,qB,iBCYTC,G,wDAnBX,aAAc,IAAD,8BACT,gBAMJC,kBAAoB,SAACC,EAAKC,GACtB,EAAKC,SAAS,CAACC,UAAW,KAN1B,EAAKC,MAAQ,CACTD,UAAU,GAHL,E,qDAYT,OACIE,KAAKD,MAAMD,SAAY,yBAAKR,UAAU,cAAf,iFAAuH,6BAAMU,KAAKC,MAAMC,c,GAdhJC,cCkHZC,E,kDA1GX,aAAc,IAAD,8BACT,gBA2BJC,cAAgB,WAEZ,GAAG,EAAKN,MAAMO,YAAc,EAAKP,MAAMQ,YAAY,CACnCC,SAASC,cAAc,eAC7BC,MAAQ,GACd,IAAIC,EAAeC,KAAKC,MAAMD,KAAKE,UAAY,EAAKf,MAAMgB,MAAMC,OAAQ,IACpEC,EAAa,EAAKlB,MAAMgB,MAAMJ,GAG9BO,EAAc,EAAKnB,MAAMgB,MAC1B,EAAKhB,MAAMQ,cAAgB,EAAKR,MAAMgB,MAAM,IAC3CG,EAAYC,OAAOD,EAAY,GAAI,GACnCE,QAAQC,IAAR,iCAAsCH,EAAY,GAAlD,yBAGAA,EAAYC,OAAOD,EAAYA,EAAYI,QAAQX,IAAgB,GACnES,QAAQC,IAAR,4BAAiCJ,KAMrC,EAAKpB,SAAS,CAACkB,MAAOG,EAAaX,YAAaU,EAC5CM,eAAgBN,EACfO,QAAQP,EAAWL,KAAKC,MAAMD,KAAKE,UAAYG,EAAWD,OAAQ,KAAM,KAC7ES,aAAe,EAAK1B,MAAM0B,aAAe,IAEzCL,QAAQC,IAAR,sBAA2BJ,EAA3B,+BAA4D,EAAKlB,MAAMwB,qBAEvE,CACA,GAAG,EAAKxB,MAAM2B,YAAc,EACxB,EAAK7B,SAAS,CAAC6B,YAAa,EAAK3B,MAAM2B,YAAc,SAGrDC,MAAM,aACN,EAAK9B,SAAS,CAAC4B,aAAc,EAAGC,YAAc,IAClClB,SAASC,cAAc,eAC7BC,MAAQ,GAKtBU,QAAQC,IAAI,EAAKtB,MAAMgB,QAtEd,EAyEb5B,eAAiB,SAACyC,GACd,EAAK/B,SAAS,CAACS,UAAWsB,EAAMC,OAAOnB,SAxEvC,EAAKX,MAAQ,CACT0B,aAAc,EACdC,YAAa,GACbI,KAAM,YACNxB,UAAW,GACXS,MAAO,GACPQ,eAAgB,GAChBhB,YAAa,GACbwB,YAAY,GAVP,E,gEAcO,IAAD,OACZ/B,KAAKD,MAAMgB,MAAMC,OAAS,GACzBhB,KAAKH,SAAS,CAAC0B,eAAgB,kCAEnCS,MAAM,6DACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAlB,GACF,IAAMqB,EAAYrB,EAAM,GACpBsB,EAAWD,EAAUpB,OACrBsB,EAAoB1B,KAAKC,MAAMD,KAAKE,UAAYuB,EAAU,IAC9D,EAAKxC,SAAS,CAACkB,MAAOA,EAAOR,YAAa6B,EAAWb,eAAgBa,EAAUZ,QAAQY,EAAUE,GAAoB,Y,+BAsDzH,OACI,yBAAKhD,UAAU,MACX,wBAAIA,UAAU,qCAAd,YACA,kBAAC,EAAD,KAGI,yBAAKA,UAAU,8DACX,yBAAKA,UAAU,KAAKiD,YAAU,OAAOC,QAAQ,aACzC,4CACA,0BAAMC,EAAG,qHAEb,0BAAMnD,UAAU,mBAAhB,iBAA6CU,KAAKD,MAAM0B,eACxD,0BAAMnC,UAAU,mBAAhB,2BAAuDU,KAAKD,MAAM2B,eAEtE,wBAAIpC,UAAU,UAAUU,KAAKD,MAAMwB,gBAEnC,kBAAC,EAAD,CAASpC,eAAgBa,KAAKb,iBAC9B,uBAAGuD,QAAS1C,KAAKK,cAAef,UAAU,mEAAmEqD,KAAK,MAAlH,WAEJ,yBAAKrD,UAAU,UACX,kBAAC,IAAD,CAAasD,IAAI,sD,GAnGnBzC,a,MCHlB0C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFvC,SAASwC,eAAe,W","file":"static/js/main.551e371b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TextBox = ({onSearchChange}) => {  \r\n    return(\r\n        <div>\r\n            <input \r\n            id='inputField'\r\n            onChange={onSearchChange}\r\n            className='input-reset ba b--black-20 pa2 mb2'\r\n            type='text' \r\n            placeholder='guess the word'\r\n             />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextBox;","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch = (err, info) => {\r\n        this.setState({hasError : true});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.state.hasError ? (<div className='f1 ma3 red'>{`Oops! something went wrong, you can report the issue to: vtmpenyana@gmail.com`}</div>) : <div>{this.props.children}</div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport TextBox from './TextBox';\r\nimport ReactPlayer from 'react-player/lazy'\r\nimport './App.css';\r\nimport ErrorBoundry from './ErrorBoundry';\r\n// Lazy load the YouTube player\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            currentScore: 0,\r\n            playerLives: 11,\r\n            word: 'something',\r\n            textValue: '',\r\n            words: [],\r\n            incompleteWord: '',\r\n            correctWord: '',\r\n            resetInput: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.state.words.length < 1){\r\n            this.setState({incompleteWord: 'loading words, please wait...'});\r\n        }\r\n        fetch('https://random-word-api.herokuapp.com//word?number=100000')\r\n        .then(response => response.json())\r\n        .then(words => {\r\n            const firstWord = words[0];\r\n            let wordSize = firstWord.length;\r\n            let randomLetterIndex = Math.floor(Math.random() * (wordSize -1 ));\r\n            this.setState({words: words, correctWord: firstWord, incompleteWord: firstWord.replace(firstWord[randomLetterIndex], '_')});\r\n        });\r\n    }\r\n\r\n    onSubmitClick = () => {\r\n        //check for correctness and clear input field if correct.\r\n        if(this.state.textValue === this.state.correctWord){\r\n            let input = document.querySelector('#inputField');\r\n            input.value = '';\r\n            let randomNumber = Math.floor(Math.random() * (this.state.words.length -1))\r\n            let wordToShow = this.state.words[randomNumber];\r\n\r\n            //removing word from list:        \r\n            let listOfWords = this.state.words;\r\n            if(this.state.correctWord === this.state.words[0]){\r\n                listOfWords.splice(listOfWords[0], 1);\r\n                console.log(`it was the first word: ${listOfWords[0]}, we've removed it`);\r\n            }\r\n            else{\r\n                listOfWords.splice(listOfWords[listOfWords.indexOf(randomNumber)], 1);\r\n                console.log(`it was this word: ${wordToShow}`);\r\n            }\r\n\r\n            \r\n\r\n            //updating the list:\r\n            this.setState({words: listOfWords ,correctWord: wordToShow, \r\n                incompleteWord: wordToShow\r\n                .replace(wordToShow[Math.floor(Math.random() * (wordToShow.length -1))], '_'),\r\n            currentScore : this.state.currentScore + 5});\r\n\r\n            console.log(`wordToShow: ${wordToShow} || incompleteWord: ${this.state.incompleteWord}`);\r\n        }\r\n        else{\r\n            if(this.state.playerLives > 1){\r\n                this.setState({playerLives: this.state.playerLives - 1});\r\n            }\r\n            else{\r\n                alert(\"Game Over\");\r\n                this.setState({currentScore: 0, playerLives : 5});\r\n                let input = document.querySelector('#inputField');\r\n                input.value = '';\r\n            }\r\n        }\r\n\r\n        //cheating answers \r\n        console.log(this.state.words);\r\n    }\r\n\r\n    onSearchChange = (event) => { \r\n        this.setState({textValue: event.target.value});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='tc'>\r\n                <h1 className='bg-black-90 lh-copy white tracked'>{`Hangman!`}</h1>\r\n                <ErrorBoundry>\r\n\r\n                \r\n                    <div className=\"flex items-center justify-center pa4 bg-lightest-blue navy\">\r\n                        <svg className=\"w1\" data-icon=\"info\" viewBox=\"0 0 32 32\">\r\n                            <title>info icon</title>\r\n                            <path d={\"M16 0 A16 16 0 0 1 16 32 A16 16 0 0 1 16 0 M19 15 L13 15 L13 26 L19 26 z M16 6 A3 3 0 0 0 16 12 A3 3 0 0 0 16 6\"} />\r\n                        </svg>\r\n                        <span className=\"lh-title f4 ml3\">{`Score: ${this.state.currentScore}`}</span>\r\n                        <span className=\"lh-title f4 ml3\">{`Remaining Lives: ${this.state.playerLives}`}</span>\r\n                    </div>\r\n                    <h2 className='pa4 f2'>{this.state.incompleteWord}</h2>\r\n\r\n                    <TextBox onSearchChange={this.onSearchChange}/>               \r\n                    <a onClick={this.onSubmitClick} className=\"f6 grow no-underline br-pill ba bw2 ph3 pv2 mb2 dib mt2 mid-gray\" href=\"#0\">Submit</a>\r\n                </ErrorBoundry>\r\n                <div className='center'>\r\n                    <ReactPlayer url='https://www.youtube.com/watch?v=cGOeiQfjYPk' />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}